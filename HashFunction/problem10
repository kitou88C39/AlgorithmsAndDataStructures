import java.util.*;

public class Main {

    // ハッシュ関数
    static int H(int x) {
        return x % 10;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // ハッシュテーブルの初期化
        var table = new ArrayList<Integer>();
        for(int i = 0; i < 10; i++){
            table.add(-1); // -1 は初期値または「空」を示す値として使用
        }

        int n = sc.nextInt();

        for(int i = 0; i < n; i++){
            int x = sc.nextInt();

            int hash = H(x);

            // データの追加 (この実装では衝突解決は行われず、上書きされます)
            table.set(hash, x);
        }

        // データの検索
        int y = 999;
        // H(999) = 999 % 10 = 9
        // table[9] には最後にハッシュ値9のデータ（999）が格納されているはず
        System.out.println(table.get(H(y)));

        // H(z) = H(y) となるように z を代入
        // 999 と同じハッシュ値 9 を持つ別の数（例: 19）を代入します
        int z = 19; // H(19) = 19 % 10 = 9。これで H(z) = H(y) となり衝突します。
        // table[9] の値を出力（これも 999 が格納されているはず）
        System.out.println(table.get(H(z)));

        sc.close();
    }
}